version: '3.9'

services:
  postgres:
    image: postgres:17.2
    container_name: postgres_container
    environment:
      POSTGRES_USER: personal-db
      POSTGRES_PASSWORD: project
      POSTGRES_DB: project
    ports:
      - "5432:5432"
    networks:
      - my-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U personal-db" ]
      interval: 10s
      retries: 5
      timeout: 5s

  consul:
    image: consul:1.10.4
    container_name: consul_container
    ports:
      - "8500:8500"
    command: agent -server -bootstrap-expect=1 -ui -client=0.0.0.0
    networks:
      - my-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    container_name: kibana_container
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - my-network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://host.docker.internal:29092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - my-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - my-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - my-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1" ]
      interval: 10s
      retries: 5
      timeout: 5s

  redis:
    image: redis:7.2.4
    container_name: redis_container
    ports:
      - "6379:6379"
    networks:
      - my-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 5
      timeout: 5s

networks:
  my-network:
    driver: bridge
