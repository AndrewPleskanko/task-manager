spring:
  application:
    name: auth-service
  boot:
    admin:
      client:
        url: http://localhost:8085
        instance:
          metadata:
            name: auth-service

  datasource:
    url: jdbc:postgresql://${DB_HOST}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:yourpassword}

  kafka:
    bootstrap-servers: localhost:29092
    producer:
      group-id: group_id
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  liquibase:
    change-log: classpath:/db/changelog/users-databaseChangeLog.yaml

  main:
    allow-bean-definition-overriding: true

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:8082/login/oauth2/code/google

  profiles:
    active: prod

  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        health-check-path: /actuator/health
        health-check-interval: 10s
        health-check-critical-timeout: 30s
        prefer-ip-address: true
        instance-id: "${spring.application.name}-${server.port}"

logging:
  level:
    org.springframework.security: DEBUG

jwt:
  expiration: ${JWT_EXPIRATION:7000000}
  secretKey: ${JWT_SECRET:s3cr3tK3y!@#123ABCdef$%^&*()_+|}{":?><,./;'[]\=-`~}

kafka:
  topic:
    email:
      service: user-deactivation

server:
  port: 8082
